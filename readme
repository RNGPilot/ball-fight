Kinetiq (Work in Progress)

Kinetiq is a physics-driven auto-battler where circular fighters bounce around an arena with rotating melee arms. Players don‚Äôt control the fighters ‚Äî battles resolve automatically through physics, collisions, and damage systems.

Concept

Arena: A rectangular box where fighters bounce around.

Fighters: Spherical units with HP, unique stats, and a rotating arm/weapon.

Combat: Damage is applied when a weapon collides with an opponent. Special effects like burn (damage over time) or shields (damage reduction) can apply.

Win Condition: The match ends when one fighter‚Äôs HP reaches zero.

Planned Features

Physics simulation (elastic wall + ball collisions, rotating arms).

Damage system:

Base damage

Bonus damage (e.g., Hellfire)

Burn damage over time

Shield % reduction

Data-driven fighter definitions (JSON/TS objects).

On-screen UI:

Fighter names

Current HP displayed on each ball

Stat panel at the bottom

Restart button to re-run matches.

Tech Stack

Language: TypeScript

Rendering: HTML5 Canvas

Bundler: Vite

No external game engine ‚Äî physics and combat written from scratch.

Project Goals

Recreate the look and feel of the original ‚ÄúKinetiq‚Äù prototype.

Keep systems modular so new fighters can be added easily.

Use this as a base for experimenting with AI-assisted game dev (Cursor/Codex prompts).

Roadmap

Setup Vite + TS project structure

Implement arena + ball physics

Add rotating arms and collision detection

Implement combat (damage, burn, shield)

UI overlay for stats and HP

Win state + restart logic

Add more fighter presets

Status

üöß Not yet implemented. This README documents the vision and intended direction.
